services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_NUM_PARTITIONS=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  postgres:
    image: postgres:14
    container_name: pg_kafka
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=kafka
      - POSTGRES_PASSWORD=kafka
      - POSTGRES_DB=kafka_database
    command: ["postgres", "-c", "listen_addresses=*"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./create_kafka_dane.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  loader:
    build: .
    depends_on:
      - postgres
    command: python load_data.py
    restart: "no"
    profiles:
      - loader

volumes:
  pgdata: